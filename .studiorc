#!/bin/bash
#

hab pkg install chef/studio-common >/dev/null
source "$(hab pkg path chef/studio-common)/bin/studio-common"

# This removes the visual mode when select text with the mouse in vim.
echo "set mouse-=a" >> ~/.vimrc

install_if_missing core/curl curl

export SERVICE_NAME="distributed_inspec_notifier"

function start() {
  build

  hab svc load $HAB_ORIGIN/$SERVICE_NAME
}

function rebuild() {
  build
  hab svc unload $HAB_ORIGIN/$SERVICE_NAME
  sleep 3
  hab svc load $HAB_ORIGIN/$SERVICE_NAME
}

document "rbuild" <<DOC
  Builds and reloads the binary from the '/src/target/debug' directory.

  This is faster than the "rebuild" command, but does not update any habitat changes
DOC
function rbuild() {
  hab svc unload $HAB_ORIGIN/$SERVICE_NAME
  sleep 1

  hab pkg install -b core/rust
  hab pkg install -b core/gcc
  hab pkg install -b core/gcc-libs/9.1.0/20200305225533
  hab pkg install -b core/glibc
  hab pkg install -b core/pkg-config
  hab pkg install -b core/make

  LD_LIBRARY_PATH="$(hab pkg path core/gcc-libs)/lib/" cargo build

  cp /src/target/debug/$SERVICE_NAME $(hab pkg path $HAB_ORIGIN/$SERVICE_NAME)/bin/

  hab svc load $HAB_ORIGIN/$SERVICE_NAME
}

document "kill_running_service" <<DOC
  This kills the running service. Where hab sup should restart. 
DOC
function kill_running_service() {
  install_if_missing core/busybox-static pgrep >/dev/null
  SERVICE_PID=$(pgrep $SERVICE_NAME)
  if [[ -n ${SERVICE_PID} ]]; then
    kill $SERVICE_PID
  fi
}

function status() {
  hab sup status;
}

# Saves the in memory bash history to a file
function save_history() {
  history -a /src/.bash_history
}

# if .studiorc is being sourced from an already running studio, don't reset bash
# history -- this is achieved by saving the current history before it is re-read
save_history

# Load the bash history from a file
history -r /src/.bash_history

function cleanup() {
    save_history
}

# When exiting the studio save the bash history to a file
trap cleanup EXIT
