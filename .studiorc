#!/bin/bash
#

hab pkg install chef/studio-common >/dev/null
source "$(hab pkg path chef/studio-common)/bin/studio-common"

install_if_missing core/curl curl
eval "$(curl -s -L https://gist.githubusercontent.com/lancewf/3117853c8c5a04c7b01bac737887a30c/raw/de1f49b0c03f0453d8b7ce0091339d63278f7cff/hab_helpers.sh)"
source <(curl -s https://gist.githubusercontent.com/lancewf/3117853c8c5a04c7b01bac737887a30c/raw/de1f49b0c03f0453d8b7ce0091339d63278f7cff/hab_helpers.sh)
eval "$(curl -s -L https://gist.githubusercontent.com/lancewf/584ca17c7b50cfc859e7cf544c1a67e8/raw/5efe2206e31849b1d64295b9176e5db4dd6b0df0/hab_service_helper.sh)"
source <(curl -s https://gist.githubusercontent.com/lancewf/584ca17c7b50cfc859e7cf544c1a67e8/raw/5efe2206e31849b1d64295b9176e5db4dd6b0df0/hab_service_helper.sh)

export SERVICE_NAME="distributed_inspec_notifier"
export PORT=8080

echo "Run 'start' to start the service"

alias rebuild="build_load"

# Override to allow the start function to work. 
function create_config() {
  mkdir -p /hab/user/distributed_inspec_notifier/config/
  printf "[service]\n host = \"localhost\"\n port = \"$PORT\"\n\n" > /hab/user/distributed_inspec_notifier/config/user.toml
  printf "[webhook]\n url = \"http://requestbin.sjcmmsn.com/1f7c85o1\"\n" >> /hab/user/distributed_inspec_notifier/config/user.toml
}

function send_report() {
  install_if_missing core/curl curl
  install_if_missing core/jq-static jq

  local examples_json_path=$1
  local endpoint="http://localhost:$PORT/data-collector/v0/"
  local uuid=$(uuidgen)
  local entity_uuid=$(uuidgen)
  local date=$(date --rfc-3339=seconds | sed 's/ /T/' | sed 's/\+.*/Z/')

  tmp_report_json="$(jq --arg date "$date" --arg id "$uuid" --arg nodeid "$entity_uuid" '.report_uuid = $id | .node_uuid = $nodeid | .end_time = $date' <$examples_json_path)"

  echo "$tmp_report_json" | curl --data "@-" $endpoint
}

function send_success_example() {

  send_report "/src/examples/compliance-success-tiny-report.json"
}

function send_failure_example() {

  send_report "/src/examples/compliance-failure-big-report.json"
}

document "rust_build" <<DOC
  Builds and reloads the binary from the '/src/target/debug' directory.

  This is faster than the "rebuild" command, but does not update any habitat changes
DOC
function rust_build() {
  hab svc unload $HAB_ORIGIN/$SERVICE_NAME
  sleep 1

  hab pkg install -b core/rust
  hab pkg install -b core/gcc
  hab pkg install -b core/gcc-libs/9.1.0/20200305225533
  hab pkg install -b core/glibc
  hab pkg install -b core/pkg-config
  hab pkg install -b core/make

  LD_LIBRARY_PATH="$(hab pkg path core/gcc-libs)/lib/" cargo build

  if [ $? -ne 0 ]; then
    return 1
  fi

  cp /src/target/debug/$SERVICE_NAME $(hab pkg path $HAB_ORIGIN/$SERVICE_NAME)/bin/

  hab svc load $HAB_ORIGIN/$SERVICE_NAME
}
